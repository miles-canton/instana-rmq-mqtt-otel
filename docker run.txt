docker run -d --name svc-rmq2mqtt  -e ROCKETMQ_NAME_SERVER=http://10.88.0.1:9876 -e MQTT_BROKER_HOST=10.88.0.1  docker.io/milesji/svc-rmq2mqtt

docker run -d --name svc-spring2mq -e ROCKETMQ_NAME_SERVER=http://10.88.0.1:9876 -p 8443:8080 docker.io/milesji/svc-spring2mq




http://52.116.143.11:8443/rmq?topic=TopicTest&msg=HelloWorld


apiVersion: apps/v1
kind: Deployment
metadata:
  name: svc-rmq2mqtt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: svc-rmq2mqtt
  template:
    metadata:
      labels:
        app: svc-rmq2mqtt
    spec:
      containers:
      - name: svc-rmq2mqtt
        image: docker.io/milesji/svc-rmq2mqtt
        env:
        - name: ROCKETMQ_NAME_SERVER
          value: "http://rocketmq-demo-nameserver.default.svc:9876"
        - name: MQTT_BROKER_HOST
          value: "emqx-ee-listeners.emqx-operator-system.svc.cluster.local"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: svc-spring2mq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: svc-spring2mq
  template:
    metadata:
      labels:
        app: svc-spring2mq
    spec:
      containers:
      - name: svc-spring2mq
        image: docker.io/milesji/svc-spring2mq
        env:
        - name: ROCKETMQ_NAME_SERVER
          value: "http://rocketmq-demo-nameserver.default.svc:9876"
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: svc-spring2mq
spec:
  selector:
    app: svc-spring2mq
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: svc-spring2mq
spec:
  to:
    kind: Service
    name: svc-spring2mq
  port:
    targetPort: 8080
  tls:
    termination: edge

